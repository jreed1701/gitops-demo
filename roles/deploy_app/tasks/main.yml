# ////////////////////////////////////////////
# Handle Credentials
# ////////////////////////////////////////////

- name: Get the hash of the initial password.
  ansible.builtin.set_fact:
    argocd_password_hashed: "{{ argocd_admin_password | password_hash('bcrypt') }}"

- name: Login to Argo CD server
  ansible.builtin.command: >
    argocd login {{ argocd_server }}
    --username admin
    --password {{ argocd_admin_password }}
    {{ '--insecure' if argocd_admin_password else '' }}
  changed_when: false

# ////////////////////////////////////////////
# Cluster registration
# ////////////////////////////////////////////
- name: Check if cluster is already registered
  ansible.builtin.command: argocd cluster list -o name
  register: cluster_list
  changed_when: false
  failed_when: false
  when: cluster_context | length > 0

# NOTE - Ansible lint believes this is not idempotent, but I check in the previous step
# whether or not this step is needed.
- name: Register external cluster with Argo CD  # noqa no-changed-when
  ansible.builtin.command: argocd cluster add {{ cluster_context }} --yes
  when:
    - cluster_context | length > 0
    - cluster_context not in cluster_list.stdout_lines

# ////////////////////////////////////////////
# Application creation
# ////////////////////////////////////////////
- name: Check if Argo CD app already exists
  ansible.builtin.command: argocd app get {{ app_name }}
  register: app_check
  changed_when: false
  failed_when: false

# NOTE - Ansible lint believes this is not idempotent, but I check in the previous step
# whether or not this step is needed.
- name: Create Argo CD application if it does not exist  # noqa no-changed-when
  ansible.builtin.command: >
    argocd app create {{ app_name }}
    --repo {{ repo_url }}
    --path {{ app_path }}
    --dest-server {{ dest_server }}
    --dest-namespace {{ dest_namespace }}
  when: app_check.rc != 0

# ////////////////////////////////////////////
# Sync app
# ////////////////////////////////////////////
- name: Sync Argo CD application
  ansible.builtin.command: argocd app sync {{ app_name }}
  register: sync_result
  changed_when: "'Successfully synced' in sync_result.stdout"

# ////////////////////////////////////////////
# Verify app
# ////////////////////////////////////////////
- name: Wait for Application pods to be ready
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: "{{ dest_namespace }}"
  register: app_pods
  until: >
    app_pods.resources
    | json_query("[*].status.containerStatuses[].ready")
    | select('equalto', true)
    | list
    | length == app_pods.resources | length
  retries: 40
  delay: 15

- name: Show Application pod names
  ansible.builtin.debug:
    msg: "App pods: {{ app_pods.resources | map(attribute='metadata.name') | list }}"
